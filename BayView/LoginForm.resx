<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        JUSY+Xmh0gAAAABJRU5ErkJggg==
</value>
  </data>
</root>